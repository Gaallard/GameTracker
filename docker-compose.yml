services:
  # QA Environment Services
  # ======================
  
  # QA Database
  db-qa:
    image: mysql:8.0
    container_name: gametracker_db_qa
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: gametracker_qa
      MYSQL_USER: gametracker_qa
      MYSQL_PASSWORD: gametracker_qa
      MYSQL_INITDB_SKIP_TZINFO: 1
    ports:
      - "3307:3306"
    volumes:
      - db_qa_volume:/var/lib/mysql
    networks:
      - gametracker_qa_network
    healthcheck:
      test: ["CMD", "mysql", "-u", "root", "-proot", "-e", "SELECT 1"]
      timeout: 30s
      retries: 20
      interval: 10s
      start_period: 120s

  # QA Backend API
  backend-qa:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: gametracker_backend_qa
    restart: unless-stopped
    ports:
      - "8081:8080"
    env_file:
      - env.qa
    environment:
      - DB_HOST=db-qa
      - DB_PORT=3306
      - DB_USER=root
      - DB_PASSWORD=root
      - DB_NAME=gametracker_qa
    depends_on:
      db-qa:
        condition: service_healthy
    networks:
      - gametracker_qa_network

  # QA Frontend
  frontend-qa:
    build:
      context: ./frontend/gameTracker
      dockerfile: Dockerfile
      args:
        - VITE_API_URL=http://localhost:8081
    container_name: gametracker_frontend_qa
    restart: unless-stopped
    ports:
      - "3000:80"
    volumes:
      - ./frontend/gameTracker/nginx.qa.conf:/etc/nginx/conf.d/default.conf
    networks:
      - gametracker_qa_network

  # PROD Environment Services
  # =========================
  
  # PROD Database
  db-prod:
    image: mysql:8.0
    container_name: gametracker_db_prod
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: gametracker_prod
      MYSQL_USER: gametracker_prod
      MYSQL_PASSWORD: gametracker_prod
      MYSQL_INITDB_SKIP_TZINFO: 1
    ports:
      - "3308:3306"
    volumes:
      - db_prod_volume:/var/lib/mysql
    networks:
      - gametracker_prod_network
    healthcheck:
      test: ["CMD", "mysql", "-u", "root", "-proot", "-e", "SELECT 1"]
      timeout: 30s
      retries: 20
      interval: 10s
      start_period: 120s

  # PROD Backend API
  backend-prod:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: gametracker_backend_prod
    restart: unless-stopped
    ports:
      - "8082:8080"
    env_file:
      - env.prod
    environment:
      - DB_HOST=host.docker.internal
      - DB_PORT=3306
      - DB_USER=root
      - DB_PASSWORD=root
      - DB_NAME=gametracker
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      db-prod:
        condition: service_healthy
    networks:
      - gametracker_prod_network

  # PROD Frontend
  frontend-prod:
    build:
      context: ./frontend/gameTracker
      dockerfile: Dockerfile
      args:
        - VITE_API_URL=
    container_name: gametracker_frontend_prod
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./frontend/gameTracker/nginx.prod.conf:/etc/nginx/conf.d/default.conf
    networks:
      - gametracker_prod_network

# Named volumes for data persistence
volumes:
  db_qa_volume:
    driver: local
  db_prod_volume:
    driver: local

# Networks for environment isolation
networks:
  gametracker_qa_network:
    driver: bridge
  gametracker_prod_network:
    driver: bridge