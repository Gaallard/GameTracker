services:
  # MySQL Database
  db:
    image: mysql:8.0
    container_name: gametracker_db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: gametracker
      MYSQL_USER: gametracker
      MYSQL_PASSWORD: gametracker
      MYSQL_INITDB_SKIP_TZINFO: 1
    ports:
      - "3307:3306"
    volumes:
      - db_volume:/var/lib/mysql
    networks:
      - gametracker_network
    healthcheck:
      test: ["CMD", "mysql", "-u", "root", "-proot", "-e", "SELECT 1"]
      timeout: 30s
      retries: 20
      interval: 10s
      start_period: 120s

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: gametracker_backend
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - DB_HOST=host.docker.internal
      - DB_PORT=3306
      - DB_USER=root
      - DB_PASSWORD=root
      - DB_NAME=gametracker
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - gametracker_network

  # Frontend
  frontend:
    build:
      context: ./frontend/gameTracker
      dockerfile: Dockerfile
    container_name: gametracker_frontend
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - gametracker_network

# Named volumes
volumes:
  db_volume:
    driver: local

# Networks
networks:
  gametracker_network:
    driver: bridge
